{"version":3,"sources":["components/buttons/styledButton.js","components/buttons/Buttons.js","components/statistics/styledStatistic.js","components/statistics/Statistics.js","components/section/styledSection.js","components/section/Section.js","components/notification/styledNotification.js","components/notification/Notification.js","components/counter/styledCounter.js","components/counter/Counter.js","components/App.js","index.js"],"names":["Button","styled","button","Buttons","options","handleCounter","Object","keys","map","key","type","className","data-name","onClick","charAt","toUpperCase","substr","toLowerCase","CounterList","ul","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","CounterSection","section","Section","title","children","Pmessage","p","Notification","message","CounterWrapper","div","Counter","state","e","target","dataset","name","setState","prevState","total","percentage","Math","round","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+qBAEO,IAAMA,EAASC,IAAOC,OAAV,KCyBJC,EAtBC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACxB,OACI,mCACKC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,cAACT,EAAD,CAAQU,KAAK,SACTC,UAAU,iBACVC,YAAWH,EACXI,QAASR,EAHb,SAIKI,EAAIK,OAAO,GAAGC,cAAgBN,EAAIO,OAAO,GAAGC,sB,gdCX1D,IAAMC,EAAcjB,IAAOkB,GAAV,KCyBTC,EAtBW,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,IAAKC,EAA0D,EAA1DA,mBAAoBC,EAAsC,EAAtCA,gCACjE,OACI,mCACI,eAACP,EAAD,WACI,qBAAIP,UAAU,oBAAd,kBAAwCU,KACxC,qBAAIV,UAAU,uBAAd,qBAA8CW,KAC9C,qBAAIX,UAAU,mBAAd,iBAAsCY,KACtC,qBAAIZ,UAAU,qBAAd,oBAA2Ca,OAC3C,qBAAIb,UAAU,wBAAd,gCAA0Dc,a,uSCXnE,IAAMC,EAAiBzB,IAAO0B,QAAV,KCgBZC,EAdQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACI,eAACJ,EAAD,WACI,oBAAIf,UAAU,QAAd,SAAuBkB,IACtBC,M,uKCNN,IAAMC,EAAW9B,IAAO+B,EAAV,KCcNC,EAZa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACI,mCACI,cAACH,EAAD,UAAWG,O,4PCLhB,IAAMC,EAAiBlC,IAAOmC,IAAV,KCMNC,E,4MAEjBC,MAAQ,CACJjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTlB,cAAgB,SAACkC,GACb,IAAM9B,EAAM8B,EAAEC,OAAOC,QAAQC,KAC7B,EAAKC,UAAS,SAACC,GAAD,sBAAmBnC,EAAMmC,EAAUnC,GAAO,O,EAI5De,mBAAqB,WAAO,IAAD,EACQ,EAAKc,MAEpC,OAHuB,EACfjB,KADe,EACTC,QADS,EACAC,K,EAK3BE,gCAAkC,WAC9B,IAAMoB,EAAQ,EAAKrB,qBACXH,EAAS,EAAKiB,MAAdjB,KACFyB,EAAaC,KAAKC,MAAO3B,EAAOwB,EAAS,KAC/C,MAAM,GAAN,OAAUC,EAAV,M,uDAGM,IAAD,EAC0BG,KAAKX,MAA5BjB,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IACvB,OAEI,eAACY,EAAD,WACI,cAAC,EAAD,CAASN,MAAM,wBAAwBlB,UAAU,UAAjD,SACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CAASP,QAAS6C,KAAKX,MAAOjC,cAAe4C,KAAK5C,cAAeM,UAAU,eAGnF,cAAC,EAAD,CAASkB,MAAM,aAAf,SACqC,IAA/BoB,KAAKzB,qBACF,cAAC,EAAD,CAAcU,QAAQ,sBAEnB,cAAC,EAAD,CAAYb,KAAMA,EACdC,QAASA,EACTC,IAAKA,EACLC,mBAAoByB,KAAKzB,mBACzBC,gCAAiCwB,KAAKxB,2C,GA7CjCyB,aCHxBC,EAAM,WACf,OACI,8BACI,cAAC,EAAD,OCFZC,IAASC,OACP,cAAC,EAAD,IACEC,SAASC,eAAe,W","file":"static/js/main.0899c128.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n\n width: 25%;\n  margin-top: 10px;\n  padding: 6px 22px;\n  font-size: 16px;\ntext-align: center;\n font-size: 16px;\n  font-weight: 700;\n  color: #808080;\n  border-radius: 50px;\n  background-color: #E6E6FA;\n  cursor: pointer;\n  margin-right: 10px;\n\n  &:hover{\n  color: rgba(255, 255, 255, 0.9);\n  background-color: rgb(20, 130, 20);\n  }\n\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './styledButton';\n\n\nconst Buttons = ({ options, handleCounter }) => {\n    return (\n        <>\n            {Object.keys(options).map((key) => (\n                <Button type=\"button\"\n                    className='buttonFeadback'\n                    data-name={key}\n                    onClick={handleCounter}>\n                    {key.charAt(0).toUpperCase() + key.substr(1).toLowerCase()}\n                </Button>\n            ))}\n\n        </>\n    )\n\n}\n\nButtons.propTypes = {\n    options: PropTypes.array.isRequired,\n    handleCounter: PropTypes.func.isRequired,\n}\n\nexport default Buttons","import styled from 'styled-components';\n\nexport const CounterList = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content:center;\n    align-items: center;\n .counterItems{\n     margin-right: 20px;\n     margin-bottom:10px;\n\n     font-weight: 700;\n     font-size: 20px;\n     \n }\n .good{\ncolor: #228B22;\n }\n .neutral{\n   color: #696969\n }\n .bad{\n   color: #8B0000\n }\n .total,.positive{\n    color: #000000\n }\n \n `","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CounterList } from './styledStatistic';\n\n\nexport const Statistics = ({ good, neutral, bad, countTotalFeedback, countPositiveFeedbackPercentage }) => {\n    return (\n        <>\n            <CounterList>\n                <li className=\"counterItems good\">Good:{good}</li>\n                <li className=\"counterItems neutral\">Neutral:{neutral}</li>\n                <li className=\"counterItems bad\">Bad:{bad}</li>\n                <li className=\"counterItems total\">Total: {countTotalFeedback()}</li>\n                <li className=\"counterItems positive\">Positive feedback: {countPositiveFeedbackPercentage()}</li>\n            </CounterList>\n        </>\n    )\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    countTotalFeedback: PropTypes.func.isRequired,\n    countPositiveFeedbackPercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics","import styled from 'styled-components';\n\nexport const CounterSection = styled.section`\n.buttonWrapper{\n  display:flex;\n  justify-content:center;\n}\n.title{\n  font-weight: 700;\n     font-size: 30px;\n     color: \tblack;\n     text-align:center;\n     text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n`;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { CounterSection } from './styledSection';\n\nexport const Section = ({ title, children }) => {\n    return (\n        <CounterSection>\n            <h2 className=\"title\">{title}</h2>\n            {children}\n        </CounterSection>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default Section","import styled from 'styled-components';\n\nexport const Pmessage = styled.p`\n     font-weight: 700;\n     font-size: 20px;\n     color: \t#808080;\n     text-align:center;\n`;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Pmessage } from './styledNotification';\n\nexport const Notification = ({ message }) => {\n    return (\n        <>\n            <Pmessage>{message}</Pmessage>\n        </>\n    )\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n}\n\nexport default Notification","import styled from 'styled-components';\n\nexport const CounterWrapper = styled.div`\n  width: 50vw;\n  margin: 0 auto;\n  \n  padding: 10px;\n\n   border-radius: 4px;\n  background-color:  #FFEFD5;\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n  \n  }\n`;","import React, { Component } from 'react';\nimport Buttons from '../buttons/Buttons';\nimport Statistics from '../statistics/Statistics';\nimport Section from '../section/Section';\nimport Notification from '../notification/Notification';\nimport { CounterWrapper } from './styledCounter';\n\n\nexport default class Counter extends Component {\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    }\n\n    handleCounter = (e) => {\n        const key = e.target.dataset.name;\n        this.setState((prevState) => ({ [key]: prevState[key] + 1 }))\n\n    }\n\n    countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        const total = good + neutral + bad;\n        return total\n    }\n\n    countPositiveFeedbackPercentage = () => {\n        const total = this.countTotalFeedback();\n        const { good } = this.state;\n        const percentage = Math.round((good / total) * 100);\n        return `${percentage}%`;\n    }\n\n    render() {\n        const { good, neutral, bad } = this.state;\n        return (\n\n            <CounterWrapper>\n                <Section title=\"Please leave feedback\" className=\"section\">\n                    <div className=\"buttonWrapper\">\n                        <Buttons options={this.state} handleCounter={this.handleCounter} className=\"button\" />\n                    </div>\n                </Section>\n                <Section title=\"Statistics\">\n                    {(this.countTotalFeedback()) === 0 ?\n                        (<Notification message=\"No feedback given\" />) :\n                        (\n                            <Statistics good={good}\n                                neutral={neutral}\n                                bad={bad}\n                                countTotalFeedback={this.countTotalFeedback}\n                                countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage} />\n                        )}\n\n                </Section>\n            </CounterWrapper>\n\n        )\n    }\n}","import React from 'react';\nimport Counter from './counter/Counter';\n\n\n\nexport const App = () => {\n    return (\n        <div>\n            <Counter />\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\n\nReactDOM.render(\n  <App />\n  , document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}